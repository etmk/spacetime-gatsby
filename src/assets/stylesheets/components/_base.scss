html {
  -webkit-overflow-scrolling: touch; // not momentum unless we add overflow-x: hidden, and then that breaks scrolltop
  -webkit-font-smoothing: antialiased;
  // apply a natural box layout model to all elements, but allowing components to change
  box-sizing: border-box;

  font-size: 100%;
  text-rendering: auto; //keep as default auto for speed

  @media #{$breakpoint-not-small} {
    font-size: 103%;
  }
  @media #{$breakpoint-medium} {
    font-size: 107%;
  }
  @media #{$breakpoint-large} {
    font-size: 110%;
  }
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  background-color: map-get($colors, white);
  font-family: $system-sans; //$sans-serif;
  line-height: 1; //keep this at 1, rarely should you ever use code that affects every element on a site
}

// Custom text-selection colors (remove any text shadows)
::-moz-selection {
  background: rgba( map-get($colors, orange), .5);
  color: map-get($colors, black);
  text-shadow: none;
}
::selection {
  background: rgba( map-get($colors, orange), .5);
  color: map-get($colors, black);
  text-shadow: none;
}

// Responsive images and other embedded objects
// if you don't have full control over `img` tags
// (if you have to overcome attributes), consider adding height: auto
img,
object,
embed {
  max-width: 100%;
  height: auto;
}

object,
embed { height: 100%; }
img { -ms-interpolation-mode: bicubic; }

#map_canvas,
.map_canvas {
  img,
  embed,
  object { max-width: none !important;
  }
}

// Get rid of gap under images by making them display: inline-block; by default
img {
  display: inline-block;
  vertical-align: middle;
}

//
// Global resets for forms
//

// Make sure textarea takes on height automatically
textarea { height: auto; min-height: 50px; }

// Make select elements 100% width by default
select { width: 100%; }

// Base type styles
//

h1, h2, h3, h4, h5 {
  font-weight: 600;
}

p {
  color: map-get($colors, black-80);
  // font-family: $serif;
  line-height: $line-height-copy;

  a {
    // color: $blue;
    color: inherit;
    box-shadow: inset 0 -0.07em 0 rgba(map-get($colors, blue), .4);
    transition: box-shadow 270ms cubic-bezier(0.77, 0, 0.175, 1),color 270ms cubic-bezier(0.77, 0, 0.175, 1);

    &:hover {
      box-shadow: inset 0 -1em 0 rgba(map-get($colors, blue), .2);
      color: map-get($colors, black);
    }
    &:focus {
      outline: none;
      background-color: map-get($colors, blue);
      color: map-get($colors, white);
      box-shadow: 8px 8px 24px rgba(0,0,0,0.2);
    }
  }
}

hr {
  border-style: solid;
}

.row {
  width: 90%;
  max-width: 80rem;
  margin: 0 auto;

  @media #{$breakpoint-not-small} {
    width: 85%;
  }

  &.narrow {
    max-width: 40rem;
  }
}

.mw-row {
  max-width: 80rem;
}

a {
  text-decoration: none;
  transition: all .2s linear;
}

button,
.button {
  border: none;
}

.vh-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}
